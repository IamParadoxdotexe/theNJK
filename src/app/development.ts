export const DevelopmentEntries = [
  {
    date: 'ONGOING 04/2020',
    title: 'Beecology Web App',
    subtitle: 'Enabling citizen scientists to help study bumblebee populations.',
    color: '#ffc107',
    contentKey: 'bwa',
    contentCount: 3,
    contentType: 'mobile',
    client: 'Beecology Project',
    role: 'Angular Web Developer',
    technologies: ['HTML', 'SCSS', 'Typescript', 'Angular', 'Material Design', 'GitLab', 'PouchDB', 'Google Maps API'],
    platform: 'The Beecology Web App gives everyday people the ability to record bumblebee sightings, save them to their device, and upload them to our database. This process helps Beecology study trends in bumblebee populations to better understand how we can help protect them.',
    work: 'Joining the Beecology team, my first task was to improve and build upon the existing web app platform. I extensively overhauled the existing design to refine user experience, enhance given functionality, and offer more dynamic features.'
  },
  {
    date: 'COMPLETED 05/2020',
    title: 'B&W Hospital App',
    subtitle: 'Showing how hospitals can better respond to service requests in a simple web app.',
    color: '#2a3cff',
    contentKey: 'bwha',
    contentCount: 6,
    contentType: 'mobile',
    client: 'Brigham & Women\'s Hospital',
    role: 'Lead Software Engineer',
    technologies: ['HTML', 'CSS', 'Javascript', 'Python', 'Flask', 'Material Design Lite', 'MongoDB', 'PushAPI'],
    platform: 'This web app shows how hospitals can use mobile technology to efficiently process service requests from anywhere in the building. The platform has the ability to authenticate staff via an employee database, receive live updates on service requests, and send notifications for new assignments.',
    work: 'I lead the sole development of this web app as the final special feature for a prototype Java application in CS 3733 Software Engineering. Acting as Lead Software Engineer of a 9-person Scrum team, I spent our final week-long sprint developing the Flask-based web app using Material Design Lite components. I also connected the app with our remote MongoDB database and enabled push notifications through the Push API.'
  },
  {
    date: 'CANCELED 01/2020',
    title: 'PUBG Power',
    subtitle: 'Giving competitive PUBG players a leaderboard that matters.',
    color: '#f3460e',
    contentKey: 'pp',
    contentCount: 3,
    contentType: 'web',
    client: 'Myself',
    role: 'Web Developer',
    technologies: ['HTML', 'CSS', 'Javascript', 'Python', 'Flask', 'MongoDB', 'PUBG API'],
    platform: 'The website PUBG Power produces a live leaderboard of player stats ranked by their “power score.” This score is calculated by my own algorithm and serves to be a more accurate representation of player skill than the game provides itself. The website also allows users to search for players by their in-game name to view more in-depth statistics.',
    work: 'I developed PUBG Power as a personal side project to flesh out my web development skills. I used Python Flask to easily host the website and interact with both the PUBG API (to fetch player statistics) and a remote MongoDB database (to store peristent player and leaderboard data). For the front-end, I used basic HTML, CSS, and Javascript.'
  },
  {
    date: 'COMPLETED 05/2020',
    title: 'B&W Hospital Food App and API',
    subtitle: 'Showing how hospital kiosks can better facilitate hospital food orders.',
    color: '#303030',
    contentKey: 'bwhfaa',
    contentCount: 4,
    contentType: 'web',
    client: 'Brigham and Women\'s Hospital',
    role: 'Lead Software Engineer',
    technologies: ['Java', 'FXML', 'CSS', 'JavaFX', 'JFoenix', 'Material Design', 'Gradle', 'GitHub', 'Apache Derby'],
    platform: 'This prototype app was built to allow hospital kiosks to carry out on-site food requests and be easily implemented in any JavaFX application via an API. Using Brigham and Women’s Faulkner Hospital as a model, the app allows for orders to the on-site cafeteria and Starbucks. There is also built-in functionality for employees to assign, deny, and complete orders.',
    work: 'As Lead Software Engineer of a 9-person Scrum team, I lead the design and development of this app and API for a prototype, Java application. During a single week-long sprint, I built the app in Java using JavaFX and connected a local Apache Derby database. I also created an API such that any other JavaFX app could easily integrate it.'
  },
  {
    date: 'ONGOING 10/2020',
    title: 'Beecology Data Analysis',
    subtitle: 'Giving people access to Beecology data and the tools to analyze it.',
    color: '#ffc107',
    contentKey: 'bda',
    contentCount: 5,
    contentType: 'web',
    client: 'Beecology Project',
    role: 'Angular Web Developer',
    technologies: ['HTML', 'SCSS', 'Typescript', 'Angular', 'Material Design', 'GitLab', 'PouchDB', 'Photoshop'],
    platform: 'Beecology’s Data Analysis platform provides access to the Beecology database of recorded bumblebee sightings for anyone interested in our research. It also provides a variety of tools for filtering, visualizing, and analyzing the data.directly on the site.',
    work: 'As part of the Beecology team, I spent time improving the existing UI of the data filtering page and developing the structure of the analysis tools page. This included creating a modular array of tool cards, a data set selection panel, and the first analysis tool.'
  }
];
