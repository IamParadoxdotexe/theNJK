// shadows https://shadows.brumm.af/
$shadow-intensity: 0.15;
$shadow-offset: 12px;
$shadow-blur: 32px;

@mixin mix-shadow {
  box-shadow: 0 0 $shadow-blur rgb(0, 0, 0, $shadow-intensity);
}

@mixin mix-shadow-down {
  box-shadow: 0 $shadow-offset $shadow-blur rgb(0, 0, 0, $shadow-intensity);
}

@mixin mix-shadow-up {
  box-shadow: 0 (-$shadow-offset) $shadow-blur rgb(0, 0, 0, $shadow-intensity);
}

// buttons
@mixin mix-button {
  background: none;
  border: none;
  outline: 0;
  text-decoration: none;
  cursor: pointer;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  // for ripple effect
  position: relative;
  overflow: hidden;
}

@mixin mix-basic-button {
  @include mix-button;
  padding: $gap-sm $gap-md;
  border-radius: $border-radius;
}

@mixin mix-basic-button--raised($color) {
  @include mix-basic-button;
  @include mix-shadow-down;
  background: $color;
}

@mixin mix-basic-button--stroked($color) {
  @include mix-basic-button;
  border: 2px solid $color;
}

@mixin mix-header-button {
  @include mix-button;
  @include mix-focus-background(rgba(0, 0, 0, 0.1));
  padding: 0 $gap-md;
  height: 100%;
  letter-spacing: 0.02rem;

  svg {
    width: $gap-xl;
  }

  @media (min-width: $breakpoint-sm) {
    padding: 0 $gap-lg;
  }

  @media (min-width: $breakpoint-lg) {
    padding: 0 $gap-xl;
  }
}

// focus highlighting
@mixin mix-focus-outline($color, $size) {
  transition-property: box-shadow, border;
  transition-duration: $transition-duration;
  transition-timing-function: $transition-timing;
  &:focus,
  &.focus,
  &:hover {
    outline: 0 none;
    outline-offset: 0;
    box-shadow: 0 0 0 $size $color;
    border-color: $color;
  }
}

@mixin mix-focus-background($color) {
  transition-property: background;
  transition-duration: $transition-duration;
  transition-timing-function: $transition-timing;
  &:focus,
  &.focus,
  &:hover {
    background: $color;
  }
}

@mixin mix-focus-color($color) {
  transition-property: color;
  transition-duration: $transition-duration;
  transition-timing-function: $transition-timing;
  &:focus,
  &.focus,
  &:hover {
    color: $color;
  }
}

// banner
@mixin mix-banner-caption {
  max-width: 640px;
  font-size: $font-size-md;
  text-align: center;
  // margin-top: $gap-xl;

  @media (min-width: $breakpoint-md) {
    font-size: $font-size-lg;
  }
}

// cards
@mixin mix-card {
  @include mix-shadow-down;
  @include mix-card-padding;
  background: var(--background-tertiary);
  border-radius: $border-radius;
}

@mixin mix-card-padding {
  padding: $gap-sm * 1.5 $gap-md;
}

@mixin mix-card-tag {
  height: min-content;
  margin-left: auto;
  margin-right: -$gap-sm * 0.5;
  line-height: 80%;
  background: var(--accent-primary);
  border-radius: $gap-md;
  font-size: $font-size-sm;
  padding: $gap-sm * 0.5 $gap-sm;
  display: flex;
  justify-content: center;
  align-items: center;
}

// frameworks
$framework-width: 1000px;
$framework-width-extended: 1280px;
$framework-padding: $gap-lg;
$framework-padding-md: $gap-lg * 2;

@mixin mix-framework {
  @include mix-framework-dynamic($framework-width);
}

@mixin mix-framework-extended {
  @include mix-framework-dynamic($framework-width-extended);
}

@mixin mix-framework-dynamic($width) {
  width: 100%;
  max-width: $width + $framework-padding * 2;
  padding: 0 $framework-padding;

  @media (min-width: $breakpoint-md) {
    max-width: 100%;
    width: $width + $framework-padding-md * 2;
    padding: 0 $framework-padding-md;
  }
}

@mixin mix-framework-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-bottom: $gap-xl * 2;
}

// dots
$dot-size: $gap-sm * 1.5;

@mixin mix-dots {
  display: flex;
  justify-content: center;

  button {
    @include mix-button;
    background: var(--background-primary);
    width: $dot-size;
    height: $dot-size;
    border-radius: $gap-sm;
    opacity: 0.25;
    cursor: pointer;
    transition: opacity $transition-timing $transition-duration * 0.5;

    &:not(:last-child) {
      margin-right: $gap-sm;
    }

    &:focus,
    &:hover {
      opacity: 0.5;
    }

    &.active {
      opacity: 0.75;
      cursor: default;
    }
  }
}
